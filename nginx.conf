user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;
        
	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

        server
        {
          listen 80;
         # server_name example.com;
          server_name _;
          return 301 https://$server_name$request_uri;
        }

        server 
        {
          listen                443 ssl;
          server_name           _;
          # resolver              127.0.0.1 [::1]:5353 valid=30s;

          ssl_certificate       /etc/nginx/certs/nginx-server.pem;
          ssl_certificate_key   /etc/nginx/certs/nginx-server.key;
          ssl_protocols         TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
          ssl_ciphers           HIGH:!aNULL:!MD5;
          ssl_session_cache     shared:SSL:20m;
          ssl_session_timeout   4h;

          ssl_verify_client     optional;
          ssl_client_certificate /etc/nginx/certs/testclient.pem;
          proxy_set_header      SSL_CLIENT_CERT $ssl_client_cert;


          location / 
          {
            if ($ssl_client_verify != SUCCESS) 
            {
                rewrite .*   /index2 break;
                proxy_pass   http://localhost:8080;
            }

            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-SSL-CERT $ssl_client_fingerprint;

            proxy_pass       http://localhost:8080;
          }

        }
}

